name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  TEST_DIR: .
  RESULTS_DIR: ./test-results

concurrency:
  group: e2e-tests

jobs:
  playwright-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        shardIndex: [ 1, 2 ]
        shardTotal: [ 2 ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'yarn'
          cache-dependency-path: ${{ env.TEST_DIR }}/yarn.lock

      - name: Install dependencies
        working-directory: ${{ env.TEST_DIR }}
        run: yarn install

      - name: Cache playwright binaries
        uses: actions/cache@v4
        id: playwright-chromium-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: cache-playwright-chromium

      - name: Install Playwright
        if: steps.playwright-chromium-cache.outputs.cache-hit != 'true'
        working-directory: ${{ env.TEST_DIR }}
        run: npx playwright install --with-deps chromium

      - name: Run Playwright tests
        working-directory: ${{ env.TEST_DIR }}
        run: yarn test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
        env:
          CI: true

      - name: display files generated
        run: ls -R

      - name: Upload blob report to GitHub Actions Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: blob-report
          retention-days: 1

  merge-reports:
    if: always()
    needs: [ playwright-tests ]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'yarn'
          cache-dependency-path: ${{ env.TEST_DIR }}/yarn.lock
      - name: Install dependencies
        working-directory: ${{ env.TEST_DIR }}
        run: yarn install

      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-blob-reports
          pattern: blob-report-*
          merge-multiple: true

      - name: Merge into HTML Report
        run: npx playwright merge-reports --reporter html ./all-blob-reports

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report--attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 14

  publish_report:
    name: Publish HTML Report
    if: "success() || needs.playwright-tests.result == 'failure'"
    needs: [ merge-reports ]
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      # Unique URL path for each workflow run attempt
      HTML_REPORT_URL_PATH: reports/${{ github.ref_name }}/${{ github.run_id }}/${{ github.run_attempt }}
    steps:
      - name: Checkout GitHub Pages Branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
      - name: Set Git User
        # see: https://github.com/actions/checkout/issues/13#issuecomment-724415212
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Download zipped HTML report
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: ${{ env.HTML_REPORT_URL_PATH }}

      - name: Push HTML Report
        timeout-minutes: 3
        run: |
          git add .
          git commit -m "workflow: add HTML report for run-id ${{ github.run_id }} (attempt:  ${{ github.run_attempt }})"
          
          while true; do
            git pull --rebase
            if [ $? -ne 0 ]; then
              echo "Failed to rebase. Please review manually."
              exit 1
            fi
          
            git push
            if [ $? -eq 0 ]; then
              echo "Successfully pushed HTML report to repo."
              exit 0
            fi
          done
      - name: Output Report URL as Workflow Annotation
        run: |
          FULL_HTML_REPORT_URL=https://ysfaran.github.io/playwright-gh-actions-gh-pages/$HTML_REPORT_URL_PATH
          echo "::notice title=ðŸ“‹ Published Playwright Test Report::$FULL_HTML_REPORT_URL"
